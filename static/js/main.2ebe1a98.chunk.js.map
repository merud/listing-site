{"version":3,"sources":["about.js","list.js","index.js"],"names":["About","React","Component","ListAddForm","props","handleSubmit","event","preventDefault","src","state","title","addListElement","handleChange","name","target","value","setState","className","onSubmit","this","type","onChange","maxLength","required","ElementAddTag","tag","toLowerCase","charAt","toUpperCase","slice","addElementTag","index","class","placeholder","ListFilterForm","titleFilter","tagFilter","setFilter","ListSortTypeForm","sortType","setSortType","htmlFor","List","displayItemsList","userItemsList","tags","elementIndex","userName","map","element","onClick","removeElementTag","itemsList","filteredList","titleContained","tagContained","i","length","includes","j","push","prevSort","newList","listLength","lowestIndex","splice","highestIndex","trueIndex","applyFilter","applySort","mappedList","alt","listIngredients","listTags","removeListElement","LoginForm","user","email","password","login","SignupForm","signup","Profile","getUserEmail","displayClick","UserNameChangeForm","newUserName","updateUserName","EmailChangeForm","curEmail","newEmail","updateEmail","PasswordChangeForm","curPassword","newPassword","confirmPassword","alert","updatePassword","Display","display","currentDisplay","getUserItemsList","source","tagIndex","Sidebar","isLoggedIn","Site","currentState","getUserName","logout","Backside","userList","userIndex","emailUsed","userNameUsed","addUser","newUser","fullUser","createDefaultList","Object","assign","newElement","console","log","emailCorrect","passwordCorrect","newEmailUsed","curEmailCorrect","hit","newUserNameUsed","curPasswordCorrect","userEmail","signupCheckUser","loginVerifyUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ebe1a98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    Hello and Welcome to my one-page React website.  This website is aimed to generally work around managing a list of objects with a variety of functionalities relating to that idea.  Thank you for visiting.\r\n                    Please note that currently data is not stored between visiting sessions and that the website is setup to function as one page, thus, browsing back will not pull up an earlier display.\r\n                </div>\r\n\r\n                <h1>\r\n                    Current Functionality\r\n                </h1>\r\n                <ol>\r\n                    <li>User Signup/Login/Logout</li>\r\n                    <li>Maintaining a list of users and their related information</li>\r\n                    <li>User updating of account information including name, email, and password</li>\r\n                    <li>User-managed list of elements maintained after logout</li>\r\n                    <li>Addition and removal of user elements to the list of elements (currently with pictures provided by reference link)</li>\r\n                    <li>Adding and removing tags to list objects</li>\r\n                    <li>Filtering of element list by matching entries to either title, tag, or both</li>\r\n                    <li>Editing of element entries while in a filtered list</li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './list.css';\r\n\r\nclass ListAddForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            src: null,\r\n            title: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const src = this.state.src;\r\n        const title = this.state.title;\r\n\r\n        this.props.addListElement(src, title);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Image URL:\r\n                    <input type=\"url\" name=\"src\" onChange={this.handleChange} maxLength=\"200\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Title:\r\n                    <input type=\"text\" name=\"title\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass ElementAddTag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tag: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let tag = this.state.tag;\r\n        tag = tag.toLowerCase();\r\n        tag = tag.charAt(0).toUpperCase() + tag.slice(1);\r\n        this.props.addElementTag(this.props.index, tag);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <form class=\"tagAddElement\" className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div class=\"newTagText\">\r\n                        <input type=\"text\" name=\"tag\" onChange={this.handleChange} maxLength=\"50\" placeholder=\"add new tag\" required />\r\n                        <input type=\"submit\" />\r\n                    </div>\r\n                </form>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass ListFilterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            titleFilter: null,\r\n            tagFilter: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        let titleFilter = this.state.titleFilter;\r\n        if (titleFilter) {\r\n            titleFilter = titleFilter.toLowerCase();\r\n        }\r\n\r\n        let tagFilter = this.state.tagFilter;\r\n        if (tagFilter) {\r\n            tagFilter = tagFilter.toLowerCase();\r\n        }\r\n\r\n        this.props.setFilter(titleFilter, tagFilter);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Title Filter Word/Phrase:\r\n                    <input type=\"text\" name=\"titleFilter\" onChange={this.handleChange} maxLength=\"50\" />\r\n                    (will search for the entry anywhere in the title)\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                    Tag Filter Word/Phrase:\r\n                    <input type=\"text\" name=\"tagFilter\" onChange={this.handleChange} maxLength=\"50\" />\r\n                    (will search for entry anywhere in any tag)\r\n                </label>\r\n                <div>\r\n                    Note that the search results will search for the entire entry within the title or tag fields, and will only show matches that include both the title and tag entries (if any entry is made).\r\n                </div>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass ListSortTypeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortType: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const sortType = this.state.sortType;\r\n\r\n        this.props.setSortType(sortType);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <br></br>\r\n                Sort By\r\n                <br></br>\r\n                <input type=\"radio\" name=\"sortType\" value=\"alpha\" onChange={this.handleChange} />\r\n                <label htmlFor=\"alpha\">Alphabetical</label>\r\n                <br></br>\r\n                <input type=\"radio\" name=\"sortType\" value=\"antiAlpha\" onChange={this.handleChange} />\r\n                <label htmlFor=\"antiAlpha\">Reverse Alphabetical</label>\r\n                <br></br>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayItemsList: this.props.userItemsList,\r\n            titleFilter: null,\r\n            tagFilter: null,\r\n            sortType: null\r\n        };\r\n    }\r\n\r\n    listTags(tags, elementIndex) {\r\n        const userName = this.props.userName;\r\n        if (userName) {\r\n            const tagList = tags.map((element, index) => <div class=\"tagElement\" key={index}>\r\n                {element}\r\n                <button onClick={() => { this.props.removeElementTag(index, elementIndex) }} className=\"removeElementTagButton\">X</button>\r\n            </div>);\r\n            return tagList;\r\n        }\r\n        else {\r\n            const tagList = tags.map((element, index) => <div class=\"tagElement\" key={index}>\r\n                {element}\r\n            </div>);\r\n            return tagList;\r\n        }\r\n    }\r\n\r\n    setFilter(titleFilter, tagFilter) {\r\n        this.setState({\r\n            titleFilter: titleFilter,\r\n            tagFilter: tagFilter\r\n        });\r\n    }\r\n\r\n    applyFilter(itemsList) {\r\n        let displayItemsList = itemsList;\r\n        let titleFilter = this.state.titleFilter;\r\n        let tagFilter = this.state.tagFilter;\r\n        let filteredList = [];\r\n        let titleContained = false;\r\n        let tagContained = false;\r\n        let lowerTitle = null;\r\n        let lowerTag = null;\r\n\r\n        for (let i = 0; i < displayItemsList.length; i++) {\r\n            lowerTitle = displayItemsList[i].title.toLowerCase();\r\n            if (lowerTitle.includes(titleFilter) || titleFilter === \"\" || titleFilter === null) {\r\n                titleContained = true;\r\n            }\r\n\r\n            if (titleContained) {\r\n                if (tagFilter === \"\" || tagFilter === null) {\r\n                    tagContained = true;\r\n                }\r\n                for (let j = 0; j < displayItemsList[i].tags.length; j++) {\r\n                    lowerTag = displayItemsList[i].tags[j].toLowerCase();\r\n                    if (lowerTag.includes(tagFilter)) {\r\n                        tagContained = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (titleContained && tagContained) {\r\n                filteredList.push(displayItemsList[i]);\r\n            }\r\n\r\n            titleContained = false;\r\n            tagContained = false;\r\n        }\r\n\r\n        return filteredList;\r\n    }\r\n\r\n    setSortType(sortType) {\r\n        this.setState({\r\n            prevSort: this.state.sortType,\r\n            sortType: sortType\r\n        })\r\n    }\r\n\r\n    applySort(displayItemsList) {\r\n        const sortType = this.state.sortType;\r\n        let newList = [];\r\n\r\n        let listLength = displayItemsList.length;\r\n\r\n        if (sortType === \"alpha\") {\r\n            for (let j = 0; j < listLength; j++) {\r\n                let lowestIndex = null;\r\n                for (let i = 0; i < displayItemsList.length; i++) {\r\n                    if (lowestIndex != null) {\r\n                        if (displayItemsList[i].title.toLowerCase() < displayItemsList[lowestIndex].title.toLowerCase()) {\r\n                            lowestIndex = i;\r\n                        }\r\n                    }\r\n                    else {\r\n                        lowestIndex = i;\r\n                    }\r\n                }\r\n                newList.push(displayItemsList[lowestIndex]);\r\n                displayItemsList.splice(lowestIndex, 1);\r\n            }\r\n        }\r\n        else if (sortType === \"antiAlpha\") {\r\n            for (let j = 0; j < listLength; j++) {\r\n                let highestIndex = null;\r\n                for (let i = 0; i < displayItemsList.length; i++) {\r\n                    if (highestIndex) {\r\n                        if (displayItemsList[i].title.toLowerCase() > displayItemsList[highestIndex].title.toLowerCase()) {\r\n                            highestIndex = i;\r\n                        }\r\n                    }\r\n                    else {\r\n                        highestIndex = i;\r\n                    }\r\n                }\r\n                newList.push(displayItemsList[highestIndex]);\r\n                displayItemsList.splice(highestIndex, 1)\r\n            }\r\n        }\r\n\r\n        return newList;\r\n    }\r\n\r\n    render() {\r\n        const userName = this.props.userName;\r\n        let displayItemsList = this.props.userItemsList;\r\n        const sortType = this.state.sortType;\r\n\r\n        for (let i = 0; i < displayItemsList.length; i++) {\r\n            displayItemsList[i].trueIndex = i;\r\n        }\r\n\r\n        displayItemsList = this.applyFilter(displayItemsList);\r\n\r\n        if (sortType) {\r\n            displayItemsList = this.applySort(displayItemsList);\r\n        }\r\n\r\n        if (userName) {\r\n            const mappedList = displayItemsList.map((element, index) => <div key={index} className=\"listElement\">\r\n                <img className=\"listPicture\" src={element.src} alt={element.title + \"Image\"} onClick={this.listIngredients}></img>\r\n                <div>\r\n                    <div className=\"listElementTitle\">\r\n                        {element.title}\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"listElementLabel\">Tags</div>\r\n                        {this.listTags(element.tags, element.trueIndex)}\r\n                        <ElementAddTag\r\n                            index={element.trueIndex}\r\n                            addElementTag={(index, tag) => this.props.addElementTag(index, tag)}\r\n                        />\r\n                        <div class=\"removeButton\">\r\n                            <button onClick={() => { this.props.removeListElement(element.trueIndex) }} className=\"removeListElementButton\">Remove Entry</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n            return (\r\n                <div>\r\n                    <ListFilterForm\r\n                        setFilter={(titleFilter, tagFilter) => this.setFilter(titleFilter, tagFilter)}\r\n                    />\r\n                    <ListSortTypeForm\r\n                        setSortType={(sortType) => this.setSortType(sortType)}\r\n                    />\r\n                    {mappedList}\r\n                    <div className=\"listAddForm\">\r\n                        <h1>Add List Element?</h1>\r\n                        <ListAddForm\r\n                            addListElement={(src, title) => this.props.addListElement(src, title)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            const mappedList = displayItemsList.map((element, index) => <div key={index} className=\"listElement\">\r\n                <img className=\"listPicture\" src={element.src} alt={element.title + \"Image\"}></img>\r\n                <div className=\"listElementTitle\">\r\n                    {element.title}\r\n                </div>\r\n                <div className=\"listElementLabel\">Tags</div>\r\n                {this.listTags(element.tags)}\r\n            </div>);\r\n            return (\r\n                <div>\r\n                    <ListFilterForm\r\n                        setFilter={(titleFilter, tagFilter) => this.setFilter(titleFilter, tagFilter)}\r\n                    />\r\n                    <ListSortTypeForm\r\n                        setSortType={(sortType) => this.setSortType(sortType)}\r\n                    />\r\n                    {mappedList}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport About from './about.js'\r\nimport List from './list.js'\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            userName: null,\r\n            password: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let email = this.state.email;\r\n        let userName = this.state.userName;\r\n        let password = this.state.password;\r\n        let user = {\r\n            email: email,\r\n            userName: userName,\r\n            password: password\r\n        }\r\n\r\n        this.props.login(user);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" name=\"email\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass SignupForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            userName: null,\r\n            password: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let email = this.state.email;\r\n        let userName = this.state.userName;\r\n        let password = this.state.password;\r\n        let user = {\r\n            email: email,\r\n            userName: userName,\r\n            password: password\r\n        }\r\n\r\n        this.props.signup(user);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" name=\"email\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Username:\r\n                    <input type=\"text\" name=\"userName\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        const userName = this.props.userName;\r\n        return (\r\n            <div>\r\n                <div className=\"profileTitle\">\r\n                    Profile of {userName}:\r\n                </div>\r\n\r\n                <div className=\"profileText\">\r\n                    Username: {userName}\r\n                </div>\r\n\r\n                <div className=\"profileText\">\r\n                    Email: {this.props.getUserEmail()}\r\n                </div>\r\n\r\n                <div className=\"profileElement\">\r\n                    <button onClick={() => { this.props.displayClick(\"userNameChange\") }} className=\"profileButton\">Change UserName</button>\r\n                </div>\r\n                <div className=\"profileElement\">\r\n                    <button onClick={() => { this.props.displayClick(\"emailChange\") }} className=\"profileButton\">Change Email</button>\r\n                </div>\r\n                <div className=\"profileElement\">\r\n                    <button onClick={() => { this.props.displayClick(\"passwordChange\") }} className=\"profileButton\">Change Password</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass UserNameChangeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            userName: null,\r\n            password: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let email = this.state.email;\r\n        let newUserName = this.state.userName;\r\n        let password = this.state.password;\r\n\r\n        let success = this.props.updateUserName(email, newUserName, password);\r\n        if (success) {\r\n            this.props.displayClick(\"profile\");\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" name=\"email\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    New Username:\r\n                    <input type=\"text\" name=\"userName\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass EmailChangeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            curEmail: null,\r\n            newEmail: null,\r\n            password: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let curEmail = this.state.curEmail;\r\n        let newEmail = this.state.newEmail;\r\n        let password = this.state.password;\r\n\r\n        let success = this.props.updateEmail(curEmail, newEmail, password);\r\n        if (success) {\r\n            this.props.displayClick(\"profile\");\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Old Email:\r\n                    <input type=\"email\" name=\"curEmail\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    New Email:\r\n                    <input type=\"email\" name=\"newEmail\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" name=\"password\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass PasswordChangeForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            curPassword: null,\r\n            newPassword: null,\r\n            confirmPassword: null\r\n        };\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let email = this.state.email;\r\n        let curPassword = this.state.curPassword;\r\n        let newPassword = this.state.newPassword;\r\n        let confirmPassword = this.state.confirmPassword;\r\n\r\n        if (curPassword === newPassword) {\r\n            alert(\"New password cannot be the same as the old password.\");\r\n        }\r\n        else if (newPassword !== confirmPassword) {\r\n            alert(\"New password must be the same as the confirmed new password.\")\r\n        }\r\n        else {\r\n            let success = this.props.updatePassword(email, curPassword, newPassword);\r\n            if (success) {\r\n                this.props.displayClick(\"profile\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"initializeForm\" onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" name=\"email\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Old Password:\r\n                    <input type=\"password\" name=\"curPassword\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    New Password:\r\n                    <input type=\"password\" name=\"newPassword\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <label>\r\n                    Confirm New Password:\r\n                    <input type=\"password\" name=\"confirmPassword\" onChange={this.handleChange} maxLength=\"50\" required />\r\n                    <br></br>\r\n                </label>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass Display extends React.Component {\r\n    render() {\r\n        const display = this.props.currentDisplay;\r\n        const welcomeMessage = \"Welcome, please use the sidebar to navigate the page.\";\r\n        const userName = this.props.userName;\r\n        const userItemsList = this.props.getUserItemsList();\r\n        switch (display) {\r\n            case \"default\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        {welcomeMessage}\r\n                    </div>\r\n                );\r\n\r\n            case \"login\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <LoginForm\r\n                            login={(user) => this.props.login(user)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case \"signup\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <SignupForm\r\n                            signup={(user) => this.props.signup(user)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case \"profile\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <Profile\r\n                            userName={userName}\r\n                            getUserEmail={() => this.props.getUserEmail()}\r\n                            displayClick={(source) => this.props.displayClick(source)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case \"userNameChange\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <UserNameChangeForm\r\n                            updateUserName={(email, newUserName, password) => this.props.updateUserName(email, newUserName, password)}\r\n                            displayClick={(source) => this.props.displayClick(source)}\r\n                        />\r\n                    </div>\r\n                )\r\n\r\n            case \"emailChange\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <EmailChangeForm\r\n                            updateEmail={(curEmail, newEmail, password) => this.props.updateEmail(curEmail, newEmail, password)}\r\n                            displayClick={(source) => this.props.displayClick(source)}\r\n                        />\r\n                    </div>\r\n                )\r\n\r\n            case \"passwordChange\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <PasswordChangeForm\r\n                            updatePassword={(email, curPassword, newPassword) => this.props.updatePassword(email, curPassword, newPassword)}\r\n                            displayClick={(source) => this.props.displayClick(source)}\r\n                        />\r\n                    </div>\r\n                )\r\n\r\n            case \"loggedDefault\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        Welcome {userName},\r\n                    </div>\r\n                );\r\n\r\n            case \"list\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <List\r\n                            userName={userName}\r\n                            userItemsList={userItemsList}\r\n                            addListElement={(src, title) => this.props.addListElement(src, title)}\r\n                            addElementTag={(index, tag) => this.props.addElementTag(index, tag)}\r\n                            removeElementTag={(tagIndex, elementIndex) => this.props.removeElementTag(tagIndex, elementIndex)}\r\n                            removeListElement={(index) => this.props.removeListElement(index)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            case \"about\":\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        <About />\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div className=\"mainDisplay\">\r\n                        Default B\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nclass Sidebar extends React.Component {\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        if (!isLoggedIn) {\r\n            return (\r\n                <div className=\"sidebar\">\r\n                    <button onClick={() => { this.props.displayClick(\"default\") }} className=\"sidebarLink\">Home</button>\r\n                    <button onClick={() => { this.props.displayClick(\"login\") }} className=\"sidebarLink\">Login</button>\r\n                    <button onClick={() => { this.props.displayClick(\"signup\") }} className=\"sidebarLink\">Signup</button>\r\n                    <button onClick={() => { this.props.displayClick(\"list\") }} className=\"sidebarLink\">List</button>\r\n                    <button onClick={() => { this.props.displayClick(\"about\") }} className=\"sidebarAbout\">About</button>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"sidebar\">\r\n                    <button onClick={() => { this.props.displayClick(\"default\") }} className=\"sidebarLink\">Home</button>\r\n                    <button onClick={() => { this.props.displayClick(\"profile\") }} className=\"sidebarLink\">Profile</button>\r\n                    <button onClick={() => { this.props.displayClick(\"logout\") }} className=\"sidebarLink\">Logout</button>\r\n                    <button onClick={() => { this.props.displayClick(\"list\") }} className=\"sidebarLink\">List</button>\r\n                    <button onClick={() => { this.props.displayClick(\"about\") }} className=\"sidebarAbout\">About</button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Site extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentState: \"default\",\r\n            userName: this.props.getUserName(),\r\n        };\r\n    }\r\n\r\n    displayClick(source) {\r\n        if (source === \"logout\") {\r\n            source = \"default\"\r\n            this.props.logout();\r\n        }\r\n\r\n        this.setState({\r\n            currentState: source\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let currentDisplay = this.state.currentState;\r\n        const userName = this.props.getUserName();\r\n        let isLoggedIn = false;\r\n        if (userName) {\r\n            isLoggedIn = true;\r\n            if (currentDisplay === \"default\" || currentDisplay === \"signup\" || currentDisplay === \"login\") {\r\n                currentDisplay = \"loggedDefault\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Sidebar\r\n                    displayClick={(source) => this.displayClick(source)}\r\n                    currentDisplay={currentDisplay}\r\n                    isLoggedIn={isLoggedIn}\r\n                />\r\n                <Display\r\n                    login={(user) => this.props.login(user)}\r\n                    signup={(user) => this.props.signup(user)}\r\n                    displayClick={(source) => this.displayClick(source)}\r\n                    updateEmail={(curEmail, newEmail, password) => this.props.updateEmail(curEmail, newEmail, password)}\r\n                    updateUserName={(email, newUserName, password) => this.props.updateUserName(email, newUserName, password)}\r\n                    updatePassword={(email, curPassword, newPassword) => this.props.updatePassword(email, curPassword, newPassword)}\r\n                    addListElement={(src, title) => this.props.addListElement(src, title)}\r\n                    addElementTag={(index, tag) => this.props.addElementTag(index, tag)}\r\n                    removeElementTag={(tagIndex, elementIndex) => this.props.removeElementTag(tagIndex, elementIndex)}\r\n                    removeListElement={(index) => this.props.removeListElement(index)}\r\n                    getUserEmail={() => this.props.getUserEmail()}\r\n                    getUserItemsList={() => this.props.getUserItemsList()}\r\n                    userName={userName}\r\n                    currentDisplay={currentDisplay}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Backside extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: [],\r\n            user: null,\r\n            userIndex: null,\r\n            userItemsList: []\r\n        };\r\n    }\r\n\r\n    signupCheckUser(user) {\r\n        let emailUsed = false;\r\n        let userNameUsed = false;\r\n        const userList = this.state.userList;\r\n        let i;\r\n        for (i = 0; i < userList.length; i++) {\r\n            if (user.email === userList[i].email) {\r\n                //email is already in use\r\n                emailUsed = true;\r\n                break;\r\n            }\r\n            else if (user.userName === userList[i].userName) {\r\n                //username is already in use\r\n                userNameUsed = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!emailUsed && !userNameUsed) {\r\n            //user does not already exist\r\n            this.addUser(user);\r\n        }\r\n        else if (emailUsed) {\r\n            alert(\"Email is already in use.\");\r\n        }\r\n        else {\r\n            alert(\"Username is already in use.\");\r\n        }\r\n    }\r\n\r\n    addUser(newUser) {\r\n        let userList = this.state.userList;\r\n        let fullUser = {\r\n            email: newUser.email,\r\n            userName: newUser.userName,\r\n            password: newUser.password,\r\n            userItemsList: []\r\n        };\r\n        let userIndex = userList.length;\r\n\r\n        fullUser.userItemsList = this.createDefaultList();\r\n        userList.push(fullUser);\r\n        this.setState({\r\n            userList: userList,\r\n            user: fullUser,\r\n            userIndex: userIndex,\r\n            userItemsList: fullUser.userItemsList\r\n        });\r\n    }\r\n\r\n    createDefaultList() {\r\n        let itemsList = [];\r\n        let defaultElement = {\r\n            src: './images/BuffaloWings.jpg',\r\n            title: 'Buffalo Wings',\r\n            tags: ['Appetizer']\r\n        }\r\n        itemsList.push(defaultElement);\r\n\r\n        let defaultElementOne = {\r\n            src: './images/Oatmeal.jpg',\r\n            title: 'Oatmeal',\r\n            tags: ['Breakfast']\r\n        }\r\n        itemsList.push(defaultElementOne);\r\n\r\n        let defaultElementTwo = {\r\n            src: './images/Pizza.jpg',\r\n            title: 'Pizza',\r\n            tags: ['Lunch', 'Dinner']\r\n        }\r\n        itemsList.push(defaultElementTwo);\r\n\r\n        let defaultElementThree = {\r\n            src: './images/PotRoast.jpg',\r\n            title: 'Pot Roast',\r\n            tags: ['Lunch', 'Dinner']\r\n        }\r\n        itemsList.push(defaultElementThree);\r\n\r\n        let defaultElementFour = {\r\n            src: './images/Icecream.jpg',\r\n            title: 'Icecream',\r\n            tags: ['Dessert']\r\n        }\r\n        itemsList.push(defaultElementFour);\r\n\r\n        let defaultElementFive = {\r\n            src: './images/GrilledCheese.jpg',\r\n            title: 'Grilled Cheese',\r\n            tags: ['Lunch', 'Dinner']\r\n        }\r\n        itemsList.push(defaultElementFive);\r\n\r\n        return itemsList;\r\n    }\r\n\r\n    addListElement(src, title) {\r\n        let itemsList = this.state.userItemsList.slice();\r\n        let userList = this.state.userList.slice();\r\n        let user = Object.assign({}, this.state.user);\r\n\r\n        let newElement = {\r\n            src: src,\r\n            title: title,\r\n            tags: []\r\n        }\r\n        itemsList.push(newElement);\r\n        user.userItemsList = itemsList;\r\n        userList[this.state.userIndex] = user;\r\n        this.setState({\r\n            userList: userList,\r\n            userItemsList: itemsList\r\n        });\r\n    }\r\n\r\n    addElementTag(index, tag) {\r\n        let itemsList = this.state.userItemsList.slice();\r\n        let userList = this.state.userList.slice();\r\n        let user = Object.assign({}, this.state.user);\r\n        console.log(itemsList[index]);\r\n\r\n        if (itemsList[index].tags.includes(tag)) { }\r\n        else {\r\n            itemsList[index].tags.push(tag);\r\n            user.userItemsList = itemsList;\r\n            userList[this.state.userIndex] = user;\r\n            this.setState({\r\n                userList: userList,\r\n                userItemsList: itemsList\r\n            });\r\n        }\r\n    }\r\n\r\n    removeElementTag(tagIndex, elementIndex) {\r\n        let itemsList = this.state.userItemsList.slice();\r\n        let userList = this.state.userList.slice();\r\n        let user = Object.assign({}, this.state.user);\r\n\r\n        itemsList[elementIndex].tags.splice(tagIndex, 1);\r\n        user.userItemsList = itemsList;\r\n        userList[this.state.userIndex] = user;\r\n        this.setState({\r\n            userList: userList,\r\n            userItemsList: itemsList\r\n        });\r\n    }\r\n\r\n    removeListElement(index) {\r\n        let itemsList = this.state.userItemsList.slice();\r\n        let userList = this.state.userList.slice();\r\n        let user = Object.assign({}, this.state.user);\r\n\r\n        itemsList.splice(index, 1);\r\n        user.userItemsList = itemsList;\r\n        userList[this.state.userIndex] = user;\r\n        this.setState({\r\n            userList: userList,\r\n            userItemsList: itemsList\r\n        });\r\n    }\r\n\r\n    loginVerifyUser(user) {\r\n        const userList = this.state.userList;\r\n        let emailCorrect = false;\r\n        let passwordCorrect = false;\r\n        let i;\r\n        for (i = 0; i < userList.length; i++) {\r\n            if (user.email === userList[i].email) {\r\n                emailCorrect = true;\r\n                if (user.password === userList[i].password) {\r\n                    passwordCorrect = true;\r\n                    //is verified\r\n                    user.userName = userList[i].userName;\r\n                    this.setState({\r\n                        user: user,\r\n                        userIndex: i,\r\n                        userItemsList: userList[i].userItemsList\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!emailCorrect) {\r\n            alert(\"Could not find an account with this Email.\");\r\n        }\r\n        else if (!passwordCorrect) {\r\n            alert(\"This is not the correct password for this Email.\");\r\n        }\r\n    }\r\n\r\n    updateEmail(curEmail, newEmail, password) {\r\n        let userList = this.state.userList.slice();\r\n        let newEmailUsed = false;\r\n        let curEmailCorrect = false;\r\n        let passwordCorrect = false;\r\n        let i;\r\n        let hit = null;\r\n        for (i = 0; i < userList.length; i++) {\r\n            if (newEmail === userList[i].email) {\r\n                newEmailUsed = true;\r\n            }\r\n            if (curEmail === userList[i].email) {\r\n                curEmailCorrect = true;\r\n                hit = i;\r\n                if (password === userList[i].password) {\r\n                    passwordCorrect = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!newEmailUsed && curEmailCorrect && passwordCorrect) {\r\n            userList[hit].email = newEmail;\r\n            this.setState({\r\n                userList: userList,\r\n                user: userList[hit],\r\n            });\r\n            return (true);\r\n        }\r\n\r\n        if (!curEmailCorrect) {\r\n            alert(\"Current Email does not have an account.\");\r\n            return (false);\r\n        }\r\n\r\n        if (!passwordCorrect) {\r\n            alert(\"This is not the correct password for this account.\");\r\n            return (false);\r\n        }\r\n\r\n        if (newEmailUsed) {\r\n            alert(\"The new Email entered is already in use.\");\r\n            return (false);\r\n        }\r\n    }\r\n\r\n    updateUserName(email, newUserName, password) {\r\n        let userList = this.state.userList.slice();\r\n        let newUserNameUsed = false;\r\n        let emailCorrect = false;\r\n        let passwordCorrect = false;\r\n        let i;\r\n        let hit = null;\r\n        for (i = 0; i < userList.length; i++) {\r\n            if (newUserName === userList[i].userName) {\r\n                newUserNameUsed = true;\r\n            }\r\n            if (email === userList[i].email) {\r\n                emailCorrect = true;\r\n                hit = i;\r\n                if (password === userList[i].password) {\r\n                    passwordCorrect = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!newUserNameUsed && emailCorrect && passwordCorrect) {\r\n            userList[hit].userName = newUserName;\r\n            this.setState({\r\n                userList: userList,\r\n                user: userList[hit],\r\n            });\r\n            return (true);\r\n        }\r\n\r\n        if (!emailCorrect) {\r\n            alert(\"Current Email does not have an account.\");\r\n            return (false);\r\n        }\r\n\r\n        if (!passwordCorrect) {\r\n            alert(\"This is not the correct password for this account.\");\r\n            return (false);\r\n        }\r\n\r\n        if (newUserNameUsed) {\r\n            alert(\"The new Username entered is already in use.\");\r\n            return (false);\r\n        }\r\n    }\r\n\r\n    updatePassword(email, curPassword, newPassword) {\r\n        let userList = this.state.userList.slice();\r\n        let emailCorrect = false;\r\n        let curPasswordCorrect = false;\r\n        let i;\r\n        for (i = 0; i < userList.length; i++) {\r\n            if (email === userList[i].email) {\r\n                emailCorrect = true;\r\n                if (curPassword === userList[i].password) {\r\n                    curPasswordCorrect = true;\r\n                    userList[i].password = newPassword;\r\n                    this.setState({\r\n                        userList: userList,\r\n                        user: userList[i],\r\n                    });\r\n                    return (true);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!emailCorrect) {\r\n            alert(\"Entered Email does not have an account.\");\r\n            return (false);\r\n        }\r\n\r\n        if (!curPasswordCorrect) {\r\n            alert(\"The old password entered is not the correct password for this Email.\");\r\n            return (false);\r\n        }\r\n    }\r\n\r\n    getUserEmail() {\r\n        let userEmail = null;\r\n        if (this.state.user) {\r\n            userEmail = this.state.user.email;\r\n        }\r\n        return (userEmail);\r\n    }\r\n\r\n    getUserName() {\r\n        let userName = null;\r\n        if (this.state.user) {\r\n            userName = this.state.user.userName;\r\n        }\r\n        return (userName);\r\n    }\r\n\r\n    getUserItemsList() {\r\n        let userItemsList = [];\r\n        if (!this.state.user) {\r\n            userItemsList = this.createDefaultList();\r\n        }\r\n        else {\r\n            userItemsList = this.state.userItemsList;\r\n        }\r\n        return (userItemsList);\r\n    }\r\n\r\n    logout() {\r\n        this.setState({\r\n            user: null,\r\n            userIndex: null,\r\n            userItemsList: []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.user;\r\n\r\n        if (user) {\r\n            return (\r\n                <Site\r\n                    updateEmail={(curEmail, newEmail, password) => this.updateEmail(curEmail, newEmail, password)}\r\n                    updateUserName={(email, newUserName, password) => this.updateUserName(email, newUserName, password)}\r\n                    updatePassword={(email, curPassword, newPassword) => this.updatePassword(email, curPassword, newPassword)}\r\n                    addListElement={(src, title) => this.addListElement(src, title)}\r\n                    addElementTag={(index, tag) => this.addElementTag(index, tag)}\r\n                    removeElementTag={(tagIndex, elementIndex) => this.removeElementTag(tagIndex, elementIndex)}\r\n                    removeListElement={(index) => this.removeListElement(index)}\r\n                    logout={() => this.logout()}\r\n                    getUserName={() => this.getUserName()}\r\n                    getUserEmail={() => this.getUserEmail()}\r\n                    getUserItemsList={() => this.getUserItemsList()}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Site\r\n                    signup={(user) => this.signupCheckUser(user)}\r\n                    login={(user) => this.loginVerifyUser(user)}\r\n                    getUserName={() => this.getUserName()}\r\n                    getUserItemsList={() => this.getUserItemsList()}\r\n                />\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Backside />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}